{"ast":null,"code":"var _jsxFileName = \"/workspace/test-blog/src/components/LazyLoader.js\";\nimport React, { useRef, useEffect } from \"react\";\nexport default function LazyLoader(_ref) {\n  var src = _ref.src,\n      width = _ref.width,\n      height = _ref.height;\n  var ref = useRef(null);\n  var io = useRef(null);\n  useEffect(function () {\n    if (ref.current) {\n      io.current = new IntersectionObserver(function (entries) {\n        entries.forEach(function (entry) {\n          if (entry.intersectionRatio > 0.5) {\n            ref.current.src = src;\n            io.current.unobserve(ref.current);\n          }\n        });\n      }, {\n        threshold: [0, 0.5, 1]\n      });\n      io.current.observe(ref.current);\n    }\n\n    return function () {\n      io.current.unobserve(ref.current);\n    };\n  }, [ref]);\n  return /*#__PURE__*/React.createElement(\"img\", {\n    ref: ref,\n    width: width,\n    height: height,\n    alt: \"\",\n    style: \"padding:\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 10\n    }\n  });\n}","map":{"version":3,"sources":["/workspace/test-blog/src/components/LazyLoader.js"],"names":["React","useRef","useEffect","LazyLoader","src","width","height","ref","io","current","IntersectionObserver","entries","forEach","entry","intersectionRatio","unobserve","threshold","observe"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;AAEA,eAAe,SAASC,UAAT,OAA4C;AAAA,MAAtBC,GAAsB,QAAtBA,GAAsB;AAAA,MAAjBC,KAAiB,QAAjBA,KAAiB;AAAA,MAAVC,MAAU,QAAVA,MAAU;AACzD,MAAMC,GAAG,GAAGN,MAAM,CAAC,IAAD,CAAlB;AACA,MAAMO,EAAE,GAAGP,MAAM,CAAC,IAAD,CAAjB;AAEAC,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIK,GAAG,CAACE,OAAR,EAAiB;AACfD,MAAAA,EAAE,CAACC,OAAH,GAAa,IAAIC,oBAAJ,CACX,UAAAC,OAAO,EAAI;AACTA,QAAAA,OAAO,CAACC,OAAR,CAAgB,UAAAC,KAAK,EAAI;AACvB,cAAIA,KAAK,CAACC,iBAAN,GAA0B,GAA9B,EAAmC;AACjCP,YAAAA,GAAG,CAACE,OAAJ,CAAYL,GAAZ,GAAkBA,GAAlB;AAEAI,YAAAA,EAAE,CAACC,OAAH,CAAWM,SAAX,CAAqBR,GAAG,CAACE,OAAzB;AACD;AACF,SAND;AAOD,OATU,EAUX;AACEO,QAAAA,SAAS,EAAE,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT;AADb,OAVW,CAAb;AAeAR,MAAAA,EAAE,CAACC,OAAH,CAAWQ,OAAX,CAAmBV,GAAG,CAACE,OAAvB;AACD;;AAED,WAAO,YAAM;AACXD,MAAAA,EAAE,CAACC,OAAH,CAAWM,SAAX,CAAqBR,GAAG,CAACE,OAAzB;AACD,KAFD;AAGD,GAvBQ,EAuBN,CAACF,GAAD,CAvBM,CAAT;AAyBA,sBAAO;AAAK,IAAA,GAAG,EAAEA,GAAV;AAAe,IAAA,KAAK,EAAEF,KAAtB;AAA6B,IAAA,MAAM,EAAEC,MAArC;AAA6C,IAAA,GAAG,EAAC,EAAjD;AAAoD,IAAA,KAAK,EAAC,UAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD","sourcesContent":["import React, { useRef, useEffect } from \"react\";\n\nexport default function LazyLoader({ src, width, height }) {\n  const ref = useRef(null);\n  const io = useRef(null);\n\n  useEffect(() => {\n    if (ref.current) {\n      io.current = new IntersectionObserver(\n        entries => {\n          entries.forEach(entry => {\n            if (entry.intersectionRatio > 0.5) {\n              ref.current.src = src;\n\n              io.current.unobserve(ref.current);\n            }\n          });\n        },\n        {\n          threshold: [0, 0.5, 1]\n        }\n      );\n\n      io.current.observe(ref.current);\n    }\n\n    return () => {\n      io.current.unobserve(ref.current);\n    };\n  }, [ref]);\n\n  return <img ref={ref} width={width} height={height} alt=\"\" style=\"padding:\" />;\n}\n"]},"metadata":{},"sourceType":"module"}